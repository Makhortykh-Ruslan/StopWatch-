{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/StopWatch/stopwatch/src/components/StopWatch/StopWatch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../style/stopwatch.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StopWatch = () => {\n  _s();\n\n  const [second, setSecond] = useState('00');\n  const [minute, setMinute] = useState('00');\n  const [hours, setHours] = useState('00');\n  const [isActive, setIsActive] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [num, setNum] = useState(1);\n  const [mili, setMili] = useState(null);\n\n  const wait = event => {\n    if (num === 1) {\n      const date = new Date();\n      setMili(date);\n      setNum(2);\n    } else {\n      const date2 = new Date();\n      console.log(mili);\n      console.log(date2);\n      console.log(mili - date2 < -300);\n      !(mili - date2 <= -300) ? setIsActive(false) : console.log('xxx');\n      setMili(0);\n      setNum(1);\n    }\n  };\n\n  useEffect(() => {\n    let intervalId;\n\n    if (isActive) {\n      intervalId = setInterval(() => {\n        const secondCounter = counter % 60;\n        const minuteCounter = Math.floor(counter / 60 % 60);\n        const hoursCounter = Math.floor(Math.floor(counter / 60) / 60);\n        const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}` : secondCounter;\n        const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n        const computedHours = String(hoursCounter).length === 1 ? `0${hoursCounter}` : hoursCounter;\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n        setHours(computedHours);\n        setCounter(counter => counter + 1);\n      }, 1);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, counter]);\n\n  const reset = () => {\n    setCounter(0);\n    setHours('00');\n    setSecond('00');\n    setMinute('00');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hours\",\n        children: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"minute\",\n        children: minute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"second\",\n        children: second\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsActive(!isActive),\n        className: \"start\",\n        children: isActive ? \"Pause\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => reset(),\n        className: \"reset\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => wait(),\n        children: \"Wait\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StopWatch, \"mjb/YSoADIvqbIHya5N1ykZTgmw=\");\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/StopWatch/stopwatch/src/components/StopWatch/StopWatch.jsx"],"names":["React","useState","useEffect","StopWatch","second","setSecond","minute","setMinute","hours","setHours","isActive","setIsActive","counter","setCounter","num","setNum","mili","setMili","wait","event","date","Date","date2","console","log","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","hoursCounter","computedSecond","String","length","computedMinute","computedHours","clearInterval","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style/stopwatch.scss'\n\nconst StopWatch = () => {\n    const [second, setSecond] = useState('00');\n    const [minute, setMinute] = useState('00');\n    const [hours, setHours] = useState('00');\n    const [isActive, setIsActive] = useState(false);\n    const [counter, setCounter] = useState(0);\n    const [num, setNum] = useState(1);\n    const [mili, setMili] = useState(null)\n\n    const wait = (event) =>{\n        if(num === 1){\n            const date = new Date();\n            setMili(date)\n            setNum(2);\n        }else {\n            const date2 = new Date();\n            console.log(mili);\n            console.log(date2);\n            console.log((mili - date2) < -300);\n           !( (mili - date2) <= -300) ? setIsActive(false) : console.log('xxx')\n            setMili(0)\n            setNum(1)\n        }\n    }\n\n\n    useEffect(() => {\n        let intervalId;\n        if (isActive) {\n            intervalId = setInterval(() => {\n                const secondCounter = counter % 60;\n                const minuteCounter = Math.floor((counter / 60) % 60);\n                const hoursCounter = Math.floor(Math.floor(counter / 60) / 60);\n                const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n                const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\n                const computedHours = String(hoursCounter).length === 1 ? `0${hoursCounter}`: hoursCounter;\n\n                setSecond(computedSecond);\n                setMinute(computedMinute);\n                setHours(computedHours);\n\n                setCounter(counter => counter + 1);\n            }, 1)\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter])\n    const reset = () =>{\n        setCounter(0)\n        setHours('00');\n        setSecond('00');\n        setMinute('00')\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"time\">\n                <span className=\"hours\">{hours}</span>\n                <span>:</span>\n                <span className=\"minute\">{minute}</span>\n                <span>:</span>\n                <span className=\"second\">{second}</span>\n            </div>\n            <div className=\"buttons\">\n                <button onClick={() => setIsActive(!isActive)} className=\"start\">\n                    {isActive ? \"Pause\": \"Start\"}\n                </button>\n                <button onClick={() => reset()} className=\"reset\">Reset</button>\n                <button onClick={() => wait()}>Wait</button>\n            </div>\n        </div>\n    )\n}\n\nexport default StopWatch;\n"]},"metadata":{},"sourceType":"module"}