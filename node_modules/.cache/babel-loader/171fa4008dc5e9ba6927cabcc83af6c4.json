{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/StopWatch/stopwatch/src/components/StopWatch/StopWatch.jsx\";\nimport React, { Component } from 'react'; // import './StopWatch.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StopWatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n      counter: '00',\n      miliseconds: '00',\n      startDisabled: true,\n      stopDisabled: false\n    };\n    this.onPageLoad = this.onPageLoad.bind(this);\n    this.onButtonStart = this.onButtonStart.bind(this);\n    this.onButtonStop = this.onButtonStop.bind(this);\n    this.onButtonReset = this.onButtonReset.bind(this);\n    this.start = this.start.bind(this);\n  }\n\n  componentDidMount() {\n    this.start();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  start() {\n    var self = this;\n    let timer = setInterval(() => {\n      var num = (Number(this.state.miliseconds) + 1).toString(),\n          count = this.state.counter;\n\n      if (Number(this.state.miliseconds) == 99) {\n        count = (Number(this.state.counter) + 1).toString();\n        num = '00';\n      }\n\n      self.setState({\n        counter: count.length == 1 ? '0' + count : count,\n        miliseconds: num.length == 1 ? '0' + num : num\n      });\n    }, 0);\n    this.setState({\n      timer\n    });\n  }\n\n  onPageLoad() {\n    this.start();\n    this.setState({\n      startDisabled: true,\n      stopDisabled: false\n    });\n  }\n\n  onButtonStart() {\n    this.start();\n    this.setState({\n      startDisabled: true,\n      stopDisabled: false\n    });\n  }\n\n  onButtonStop() {\n    clearInterval(this.state.timer);\n    this.setState({\n      startDisabled: false,\n      stopDisabled: true\n    });\n  }\n\n  onButtonReset() {\n    this.setState({\n      timer: null,\n      counter: '00',\n      miliseconds: '00'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.counter ? this.state.counter : 'counter state is empty'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.miliseconds ? this.state.miliseconds : 'miliseconds state is empty'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Start\",\n        disabled: \"disabled\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Stop\",\n        disabled: \"disabled\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Reset\",\n        disabled: \"disabled\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StopWatch;","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/StopWatch/stopwatch/src/components/StopWatch/StopWatch.jsx"],"names":["React","Component","StopWatch","constructor","props","state","timer","counter","miliseconds","startDisabled","stopDisabled","onPageLoad","bind","onButtonStart","onButtonStop","onButtonReset","start","componentDidMount","componentWillUnmount","clearInterval","self","setInterval","num","Number","toString","count","setState","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './StopWatch.css';\n\nclass StopWatch extends Component {\n\n    state = {\n        timer: null,\n        counter: '00',\n        miliseconds: '00',\n        startDisabled: true,\n        stopDisabled: false\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.onPageLoad = this.onPageLoad.bind(this);\n        this.onButtonStart = this.onButtonStart.bind(this);\n        this.onButtonStop = this.onButtonStop.bind(this);\n        this.onButtonReset = this.onButtonReset.bind(this);\n        this.start = this.start.bind(this);\n    }\n\n    componentDidMount() {\n        this.start();\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n\n    start() {\n        var self = this;\n        let timer = setInterval(() => {\n            var num = (Number(this.state.miliseconds) + 1).toString(),\n                count = this.state.counter;\n\n            if (Number(this.state.miliseconds) == 99) {\n                count = (Number(this.state.counter) + 1).toString();\n                num = '00';\n            }\n\n            self.setState({\n                counter: count.length == 1 ? '0' + count : count,\n                miliseconds: num.length == 1 ? '0' + num : num\n            });\n        }, 0);\n        this.setState({ timer });\n    }\n\n    onPageLoad() {\n\n        this.start();\n        this.setState({ startDisabled: true, stopDisabled: false });\n    }\n\n\n    onButtonStart() {\n\n        this.start();\n        this.setState({ startDisabled: true, stopDisabled: false });\n    }\n\n\n    onButtonStop() {\n        clearInterval(this.state.timer);\n        this.setState({ startDisabled: false, stopDisabled: true });\n    }\n\n\n    onButtonReset() {\n        this.setState({\n            timer: null,\n            counter: '00',\n            miliseconds: '00'\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <p>{this.state.counter ? this.state.counter : 'counter state is empty'}</p>\n                <p>{this.state.miliseconds ? this.state.miliseconds : 'miliseconds state is empty'}</p>\n\n                <button title=\"Start\" disabled=\"disabled\">Start</button>\n                <button title=\"Stop\" disabled=\"disabled\">Stop</button>\n                <button title=\"Reset\" disabled=\"disabled\">Reset</button>\n            </div>\n        );\n    }\n}\n\nexport default StopWatch;\n"]},"metadata":{},"sourceType":"module"}